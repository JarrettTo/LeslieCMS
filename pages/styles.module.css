@font-face {
  font-family: 'Replica Pro';
  src: url('/public/fonts/ReplicaPro.ttf') format('ttf');
   
  font-weight: normal;
  font-style: normal;
  /* Add other font styles if available */
}
.gridContainer {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  padding: 10px;
  justify-content: center;
}
.textContainer{
  display: inline-flex; /* changed to inline-flex */
  flex-direction: column;
}

.elementContainer {
  display: grid; /* Use grid to match child widths */
  grid-template-columns: 1fr; /* One column grid */
  gap: 10px; /* Spacing between grid items */
}

.gridItem {
  display: inline-flex; /* changed to inline-flex */
  flex-direction: column;
  align-items: center;
  text-align: center;
  margin-bottom: 20px;
}

.imageWrapper {
  display: inline-block; /* Shrink to fit the content */
  line-height: 0; /* Remove space below images */
}

.gridItem img {
  height: 18vh;
  width: auto; /* Adjust width to maintain aspect ratio */
  object-fit: contain;
  display: block; /* Display block to fill the width of its container */
}

.gridItemName {
  max-width: 100%;
  overflow: hidden;
  font-size: 12px;
  text-overflow: ellipsis;
  font-weight:600;
  white-space: nowrap;
  font-family: 'Replica Pro', monospace;
}

.name {

  font-size: 20px;
  font-weight:600;
  white-space: nowrap;
  font-family: 'Replica Pro', monospace; /* Add this line */
}
.gridItemDate {
  max-width: 100%;
  overflow: hidden;
  font-size: 10px;
  text-overflow: ellipsis;
  font-weight:normal;
  white-space: nowrap;
  font-family: 'Replica Pro', monospace; /* Add this line */
}
.gridItem video {
  height: 18vh;
  object-fit: contain;
  width: auto; /* Adjust width to maintain aspect ratio */
  display: block; /* Removes extra space beneath the content */
  margin: 0 auto; /* Centers the content horizontally */
}

.playButton {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.gridItem:hover {
  box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}

.react-image-lightbox-overlay {
  background-color: rgba(0, 0, 0, 0.8) !important; /* Dimmed background */
}

/* Customize the size and position of the lightbox */
.react-image-lightbox-content {
  width: 80vw !important; /* Width as a percentage of the viewport width */
  height: 80vh !important; /* Height as a percentage of the viewport height */
  top: 10vh !important; /* Position from the top */
  left: 10vw !important; /* Position from the left */
}

/* Ensure that image fits nicely within the lightbox */
.react-image-lightbox-image {
  max-width: 100%;
  max-height: 100%;
}
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.fadeOut {
  animation: fadeOut 0.3s forwards;
}

@keyframes fadeOut {
  to { opacity: 0; }
}
.lightboxOverlay {
  position: absolute;
  top: 10px; /* Slightly lower from the top for accessibility */
  left: 1%;
  padding: 10px;
  color: black; /* Text color */
  font-size: 14px; /* Adjust as needed */
  z-index: 1020; /* Above the image and controls */
  font-family: 'Replica Pro', monospace;
  font-weight: 600;
}
.lightboxBackdrop {
  position: fixed;
  
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #FFF;
  z-index: 10
    
  
}
.infoOverlay {
  position: absolute;
  top: 0;
  left: 1%;
  padding-left:10px;
  width: 40%; /* Full width */
  height: 100%; /* Full height */
  z-index: 10;
  color: white; /* Example: white text */
  display: flex;
  font-size: 14px;
  font-family: 'Replica Pro', monospace;
  font-weight: 600;
  line-height: 1.8;
  mix-blend-mode: difference;

}


.mediaContainer {
  position: relative;
  height: 80vh;
  width:auto;
  display: flex;
  justify-content: center;
  object-fit: contain;
  align-items: center;
  overflow: visible;
}
.contentContainer {
  position: relative;
  height: 80vh;
  width:100%;
  display: flex;
  justify-content: center;
  object-fit: contain;
  align-items: center;
  overflow: visible;
}
.reactPlayer {
  max-width: 80vw; 
  max-height: 80vh; 
  height: 70vh;
  width: auto;
  aspect-ratio: auto;
}


@media screen and (orientation: portrait) {
  .reactPlayer  {
    width: auto;
    height: 50vh; 
  }
}

@media screen and (orientation: landscape) {
  .reactPlayer  {
    width: 80vw; 
    height: auto; 
  }
}
@media (max-aspect-ratio: 16/9) {
  .reactPlayer  {
    width: auto;
    height: auto;
  }
}
@media (min-aspect-ratio: 16/9) {
  .reactPlayer  {
    width: 100%;
    height: auto;
  }
}

.lightboxContent img,
.lightboxContent video {

  width: auto;
  height: auto;

  max-width: 90%;
  max-height: 90%;
  object-fit: contain;
}
.lightboxContent {
  position: relative;
  max-width: 70vw;
  max-height: 70vh;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.heading{

  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 20px;
  padding-top:0.7%;
  padding-left:0.725%
}

/* Navigation buttons */
.lightboxButton {

  
  color: black;
  font-size: 30px; /* Larger font for clarity */
  font-family: 'Replica Pro', monospace;
  font-weight: 600;
  height: 50px;
  background: transparent; /* Makes the button background transparent */
  border: none; /* Removes any border that may be present */
  outline: none;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute; /* Position the buttons absolutely within the backdrop */
  z-index: 1010; /* Above the lightbox content */
}

.lightboxButton.prev,
.lightboxButton.next {
  top: 50%; 
  transform: translateY(-50%); /* Adjust vertical alignment */
}

.lightboxButton.prev {
  left: 20px; 
}

.lightboxButton.next {
  right: 20px; 
}

.lightboxButton.close {

  font-size: 17px
}
.lightboxButton.info {

  font-size: 17px
}
.headingButtons{
  position: absolute;
  top: 10px; /* Slightly lower from the top for accessibility */
  right: 1%;
  padding: 10px;
}
.headingButton {

  font-size: 17px;
  color: black;

  font-family: 'Replica Pro', monospace;
  font-weight: 600;

  background: transparent; /* Makes the button background transparent */
  border: none; /* Removes any border that may be present */
  outline: none;
  z-index: 1010; /* Above the lightbox content */
}

.leslieInfo {
  color: black;
  font-size: 30px; /* Larger font for clarity */
  font-family: 'Replica Pro', monospace;
  font-weight: 600;
  height: 50px;
  background: transparent; /* Makes the button background transparent */
  border: none; /* Removes any border that may be present */
  outline: none;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute; /* Position the buttons absolutely within the backdrop */
  top: 0.5%;
  right: 2%;
  font-size: 17px
}

/* Add a fade-out animation to the close function */
.closeLightbox {
  animation: fadeOut 0.3s forwards; /* The 'forwards' value will retain the last keyframe state after the animation completes */
}
.lightboxOpening {
  animation: fadeIn 0.3s;
}

/* Animation only when closing */
.lightboxClosing {
  animation: fadeOut 0.3s forwards;
}
.video-controls {
  display: flex;
  justify-content: space-around;
  align-items: center;
  padding: 10px;
  background: #333;
  color: white;
  position: absolute;
  bottom: 0; /* Position at the bottom of the mediaContainer */
  left: 0;
  width: 100%; /* Stretch across the container */
  z-index: 2010;
}

.video-controls button {
  background: none;
  border: none;
  color: white;
  cursor: pointer;
}

.video-controls input[type="range"] {
  width: 100%;
}
.video {
  max-width: 100%;
  max-height: calc(100% - 40px); /* Adjust the 40px to the height of your controls */
  /* ... other styles ... */
}

.baseBlock {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column; /* This stacks the child divs vertically */
  justify-content: flex-start; /* Aligns children to the top of the container */
  align-items: center; /* Centers children horizontally */
  background-color: #FFF;
  z-index: 1000;
  overflow: auto; /* Adds scrollbar if content overflows */
  padding: 20px; /* Add padding as needed */
}

.headingOverlay,
.holder {
  width: 100%; /* Makes sure they span the full width of the parent */
  /* Additional styling as needed */
}
.nameOverlay {
  
  font-size: 20px;
  font-weight:600;
  white-space: nowrap;
  font-family: 'Replica Pro', monospace; /* Add this line */
}
.headingOverlay{
  padding-bottom: 2%;
}
.description{
  max-width: 50%;
  font-size: 16px;
  text-transform: uppercase;
  font-family: 'Replica Pro', monospace;
 
}
.holder {
  flex-direction: row; /* Orient children in a row */
  justify-content: center; /* Center children horizontally */
  margin-bottom: 2%;
}

.description {
  max-width: 50%; /* Only take up half the width */
  /* ... other styles ... */
}

/* You might want to add another div to occupy the remaining space */
.emptySpace {
  width: 50%; /* Occupy the remaining space */
}
.socialButton{
  background: transparent;
  border: none;
  font-size: 16px;
  text-transform: uppercase;
  font-family: 'Replica Pro', monospace;
  margin-right: 0.5%;
  margin-bottom: 0.5%;
  margin-left: -4%;
}
.buttons {
  max-width: 10%; /* Only take up half the width */
  /* ... other styles ... */
}
.emptySpaceButtons {
  width: 85%; /* Occupy the remaining space */
}
.columnHolder {
  display: flex; /* Establishes a flex container */
  justify-content: space-between; /* Distributes space between columns */
  margin-top: 7%;
}
.closeHeader{
  top: 0.5%;
  right: 2%;
  font-size: 17px
}
.column {
  flex: 1; /* Each column will take up an equal amount of space */
  font-size: 16px;
  text-transform: uppercase;
  font-family: 'Replica Pro', monospace;
  padding-right: 10%; /* Add padding as needed */
  box-sizing: border-box; /* Include padding and border in the element's total width and height */
}

.uploadingIndicator {
  display: flex;
  justify-content: center;
  align-items: center;
}

.spinner {
  border: 4px solid rgba(0, 0, 0, 0.1);
  width: 36px;
  height: 36px;
  border-radius: 50%;
  border-left-color: #09f;
  animation: spin 1s ease infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}