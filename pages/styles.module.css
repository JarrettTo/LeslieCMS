@font-face {
  font-family: 'Replica Pro';
  src: url('/public/fonts/ReplicaPro.ttf') format('ttf');
   
  font-weight: normal;
  font-style: normal;
  /* Add other font styles if available */
}
.gridContainer {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  padding: 10px;
  justify-content: center;
}
.textContainer{
  display: inline-flex; /* changed to inline-flex */
  flex-direction: column;
}

.elementContainer {
  display: grid; /* Use grid to match child widths */
  grid-template-columns: 1fr; /* One column grid */
  gap: 10px; /* Spacing between grid items */
}

.gridItem {
  display: inline-flex; /* changed to inline-flex */
  flex-direction: column;
  align-items: center;
  text-align: center;
  margin-bottom: 20px;
}

.imageWrapper {
  display: inline-block; /* Shrink to fit the content */
  line-height: 0; /* Remove space below images */
}

.gridItem img {
  height: 18vh;
  width: auto; /* Adjust width to maintain aspect ratio */
  object-fit: contain;
  display: block; /* Display block to fill the width of its container */
}

.gridItemName {
  max-width: 100%;
  overflow: hidden;
  font-size: 12px;
  text-overflow: ellipsis;
  font-weight:600;
  white-space: nowrap;
  font-family: 'Replica Pro', monospace;
}

.name {
  margin: 2%;
  padding-top: 30%;
  font-size: 20px;
  font-weight:600;
  white-space: nowrap;
  font-family: 'Replica Pro', monospace; /* Add this line */
}
.gridItemDate {
  max-width: 100%;
  overflow: hidden;
  font-size: 10px;
  text-overflow: ellipsis;
  font-weight:normal;
  white-space: nowrap;
  font-family: 'Replica Pro', monospace; /* Add this line */
}
.gridItem video {
  height: 18vh;
  object-fit: contain;
  width: auto; /* Adjust width to maintain aspect ratio */
  display: block; /* Removes extra space beneath the content */
  margin: 0 auto; /* Centers the content horizontally */
}

.playButton {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.gridItem:hover {
  box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}

.react-image-lightbox-overlay {
  background-color: rgba(0, 0, 0, 0.8) !important; /* Dimmed background */
}

/* Customize the size and position of the lightbox */
.react-image-lightbox-content {
  width: 80vw !important; /* Width as a percentage of the viewport width */
  height: 80vh !important; /* Height as a percentage of the viewport height */
  top: 10vh !important; /* Position from the top */
  left: 10vw !important; /* Position from the left */
}

/* Ensure that image fits nicely within the lightbox */
.react-image-lightbox-image {
  max-width: 100%;
  max-height: 100%;
}